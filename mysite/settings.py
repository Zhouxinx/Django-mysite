"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

#项目路径
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

#密钥配置，一般用于用户密码、CSRF机制和会话session
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i%8xluc$9br2xzhs3v33q$6#ux41b5cbl9ioot0ud^owbak+g7'

#调试模式（开发调试阶段，而在项目部署上线的时候应该置为FALSE）
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#域名访问权限
#当DEBUG = True和ALLOWED_HOSTS = []时，项目只允许以localhost：8000或者127.0.0.1在浏览器中访问
ALLOWED_HOSTS = []


# Application definition
#APP列表
INSTALLED_APPS = [
    'django.contrib.admin', #管理站点
    'django.contrib.auth',  #认证系统
    'django.contrib.contenttypes',  #内容类型的框架，记录项目中所有model元数据
    'django.contrib.sessions',  #会话
    'django.contrib.messages',  #消息
    'django.contrib.staticfiles',   #加载静态文件
    'ckeditor',
    'ckeditor_uploader',
    'blog',
    'read_statistics',
    'comment',
    'likes',
    'user',
]
#中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', #内置的安全机制，保护用户与网站的通信安全
    'django.contrib.sessions.middleware.SessionMiddleware', #会话的Session功能
    #插入中间件'django.middleware.locale.LocaleMiddleware',会引起BUG
    'django.middleware.common.CommonMiddleware', #处理请求信息，规范化请求内容
    'django.middleware.csrf.CsrfViewMiddleware', #开启CSRF防护功能
    'django.contrib.auth.middleware.AuthenticationMiddleware', #开启内置的用户认证系统
    'django.contrib.messages.middleware.MessageMiddleware', #开启内置的消息提示功能
    'django.middleware.clickjacking.XFrameOptionsMiddleware', #开启恶意程序点击劫持
]

ROOT_URLCONF = 'mysite.urls'


TEMPLATES = [
    {
    #BACKEND模板引擎，用以识别模板里的变量和指令
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
        #添加的是模板路径
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,#在APP里查找模板文件
        'OPTIONS': { #用于填充在RequestContext中上下文的调用函数
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user.context_processors.login_modal_form',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysite_db',
        'USER': 'root',
        'PASSWORD': 'test123456',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'   #简体汉语

TIME_ZONE = 'Asia/Shanghai' #时间设置为亚洲上海

USE_I18N = True

USE_L10N = True

USE_TZ = True


#配置静态资源
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
#在项目的根目录中存放静态资源
    os.path.join(BASE_DIR,'static'),
]

#media
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

#配置ckeditor
CKEDITOR_UPLOAD_PATH = 'upload/'
CKEDITOR_IMAGE_BACKEND = "pillow"

CKEDITOR_CONFIGS = {
    'default':{},
    'comment_ckeditor':{
        'toolbar':'custom',
        'toolbar_custom':[
            ['Bold', 'Italic', 'Underline','Strike', 'Subscripts', 'Superscript'],
            ["TextColor", "BGColor", 'RemoveFormat'],
            ['NumberedList', 'BulletdList'],
            ['Link','Unlink'],
            ["Smiley","SpecialChar",'Blockquote'],
        ],
        'width':'auto',
        'height':'180',
        'tabSpaces': 4,
        'removePlugins':'elementspath',
        'resize_enabled':False,
    }
}

#自定义参数
EACH_PAGE_BLOGS_NUMBER = 4

#缓存设置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

# 发送邮件设置
# https://docs.djangoproject.com/en/2.0/ref/settings/#email
# https://docs.djangoproject.com/en/2.0/topics/email/
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '2984822608@qq.com'
EMAIL_HOST_PASSWORD = 'gqxissgmkzbtdceh'  # 授权码
EMAIL_SUBJECT_PREFIX = '[周欣的博客]'
EMAIL_USE_TLS = True  # 与SMTP服务器通信时，是否启动TLS链接(安全链接)